---
title: "Wildlife health in protected areas. Common findings, monitoring, and practices by rangers according to protected area managers"
author:
  - name: Diego Montecino-Latorre
    affiliations:
      - name: Wildlife Conservation Society - Health Progr
        city: Bronx
        state: New York
  - name: Mathieu Pruvot
    affiliations:
      - name: Wildlife Conservation Society - Health Progr
        city: Bronx
        state: New York
  - name: Sarah H Olson
    affiliations:
      - name: Wildlife Conservation Society - Health Progr
        city: Bronx
        state: New York
execute: 
  cache: false
format:
  pdf:
    documentclass: scrartcl
    papersize: letter
    fig-pos: "h"  
output-file: "survey_test"
---

# Methods

We developed a web-based questionnaire aimed at protected area managers. The survey had four sections. Under section 1, we asked managers to rank their perceptions regarding wildlife health 
and potential consequences of pathogen transmission among wildlife, domestic
animals and people.

<!-- Wildlife health, including infectious and non-infectious diseases, is important to achieve the conservation goals of the protected areas where I work -->

<!-- Pathogens carried by wildlife inhabiting the protected area I work in can affect livestock health    -->

<!-- Pathogens carried by wildlife inhabiting the protected area I work in can affect public health -->

<!-- Human or livestock pathogens can affect wildlife populations inhabiting the protected area I work  -->


Under section 2, we explored the overall frequency of encounters with dead, sick, or injured wildlife in the protected areas and their documentation when found during patrols.

<!-- Are dead animals encountered in the protected area?  -->
<!-- Are sick or injured animals encountered in the protected area?  -->

<!-- Are healthy wildlife found during patrols (rangers or others) recorded as a specific category of individuals? -->
  <!-- 12.a Please select one of the choices below to help us understand how healthy wildlife are recorded during a patrol: -->
  <!-- 12.b Please indicate what type of data are recorded (check all that apply) -->

<!-- 13. Are dead wildlife found during patrols recorded as a specific category of individuals?  -->
  <!-- 13.a Please select one of the choices below to help us understand how dead wildlife are recorded during a patrol: -->
  <!-- 13.b Please indicate what type of data are recorded (check all that apply) -->

<!-- 14. Are injured wildlife found during patrols recorded as a specific category of individuals?  -->
  <!-- 14.a Please select one of the choices below to help us understand how injured wildlife are recorded during a patrol: -->
  <!-- 14.b Please indicate what type of data are recorded (check all that apply) -->

<!-- 15. Are sick wildlife found during patrols recorded as a specific category of individuals?  -->
<!-- 15.a Please select one of the choices below to help us understand how sick wildlife are recorded during a patrol: -->

Under section 3, we asked managers to rank the importance of introduced domestic animals 
for the conservation goals of the corresponding protected areas. Likert scales were used in sections 1 - 3.

<!-- Introduced domestic animals (e.g., dogs, cats, cattle, pigs, cats) are a concern for the conservation goals of the protected areas where I work -->
<!-- 16. Are domestic animals found in the protected area (free-ranging, captive, on a farm)? -->
<!-- 17. If observed on a patrol, is the presence of domestic animals recorded? -->
<!-- 18. Is the health status of the observed domestic animals (healthy, sick or injured, dead) recorded? -->

Under section 4, we asked about data storage practices and the current state of SMART components. 

<!-- Are these data entered and stored in SMART Desktop? -->
<!-- If none of the items are recorded in the corresponding SMART Conservation Area where are they recorded?  -->

<!-- 21. What version of SMART Desktop is currently used in the protected area? -->
<!-- 22. Is SMART Connect available to manage and transfer information between SMART Desktop and SMART Mobile?  -->
<!-- 22.a Are there plans to set up SMART Connect instance and when? -->
<!-- 23. Is SMART fully rolled-out in the protected area(s) you work in or is it being piloted? -->

An introductory webpage explained that the survey was voluntary, anonymous, aimed at protected area managers administering SMART data. The webpage also clarified that clicking the “Start the survey” button constituted consent. The survey was built on Google Forms, which has a translation tool. We provided a tutorial on translating it into the preferred language (https://sites.google.com/wcs.org/smarttorecordwildlifehealth/home). The survey was exempt from IRB review (ref #22-53 Wildlife Conservation Society Internal Review Board).

The survey was distributed globally to the SMART Community (SMART Community Forum users https://forum.smartconservationtools.org/) by the SMART Partnership via email in October 2022, and it remained open for three months. As the closing date approached, a reminder was sent to the SMART Community three weeks in advance. 


<!---------------------------------------->
<!-- Assessing responses and clean data -->
<!---------------------------------------->


<!-- # Load libraries -->

```{r load libraries}
#| echo: false
#| eval: true
#| message: false
#| warning: false

#library(googlesheets4)# load the googlesheets4 library
library(readxl)
# library(plyr)
# library(tibble)
library(tidyverse) # load the tidyverse library
library(purrr) #for map functions
library(lubridate) #for date functions
library(skimr) #for summary statistics
library(kableExtra) #for table formatting
library(countrycode) #for country codes
library(janitor) #for cleaning data
library(english)
# library(rnaturalearth)
# library(rnaturalearthdata)
library(stringr)
# library(wdpar) 
# library(foreach)
# library(doFuture)
# library(sf)
# library(stringdist)
library(stringi)
# library(cowplot)

```

<!-- ## Open data -->

```{r open data}
#| echo: false
#| eval: true
#| warning: false
#| message: false

#read the data
dat = read.csv("../data/survey_responses.csv")


```

<!-- ## Modify dataset header names -->

```{r clean names}
#| echo: false
#| eval: true
#| warning: false
#| message: false

new.names<-c(
  
  "time",                           #1. Timestamp
  
  "score",                          #2. Score
  
  "protected_area",                 #3. Protected area names
  
  "wildlife_health_important",      #4. Wildlife health is important to achieve 
                                    #conservation goals of the protected areas
  
  "wildlife_path_affect_livestock", #5. Wildlife pathogens can affect livestock 
                                    #health" 
  
  "wildlife_path_affect_phealth",   #6. Wildlife pathogens can affect public 
                                    #health
  
  "hum_liv_path_affect_wildlife",   #7. Human or livestock pathogens can affect 
                                    #wildlife populations 
  
  "dom_animals_concern",            #8. Introduced domestic animals are a 
                                    #concern for conservation" 
  
  "dead_found",                     #9. Are dead animals encountered
  
  "sick_injured_found",             #10. Are sick or injured animals encountered
  
  "livestock_found",                #11. Are livestock encountered
  
  "patrol_length",                  #12. How long, on average, are the patrols 
                                    #in the protected area?
  
  "patrols_per_month",              #13. On average, how many patrols are 
                                    #completed in the protected area in one 
                                    #month?
  
  "healthy_wl_recorded",            #14. Are healthy wildlife found during 
                                    #patrols recorded as a 
                                    #specific category of individuals?"
  
  "how_healthy_wl_recorded",        #15. How are healthy wildlife recorded
  
  "healthy_wl_data_recorded",       #16. Type of data recorded from healthy 
                                    #wildlife
  
  "healthy_wl_data_in_smart",       #17. Are these data entered and stored in
                                    #SMART Desktop?
  
  "healthy_wl_data_other",          #18. If none of the items are recorded in 
                                    #the corresponding SMART Conservation Area 
                                    #where are they recorded? 
  
  "dead_wl_recorded",               #19. Are dead wildlife found during patrols 
                                    #recorded as a specific category of 
                                    #individuals?"               
  
  "how_dead_wl_recorded",           #20. How are dead wildlife recorded" 
  
  "dead_wl_data_recorded",          #21. Type of data recorded from dead 
                                    #wildlife
  
  "dead_wl_data_in_smart",          #22. Are these data entered and stored in 
                                    #SMART Desktop?
  
  "dead_wl_data_other",             #23 If none of the items are recorded in the
                                    #corresponding SMART Conservation Area
                                    #where are they recorded?" 
  
  "injured_wl_recorded",            #24. Are injured wildlife found during 
                                    #patrols recorded as a specific category of
                                    #individuals?" 
  
  "how_injured_wl_recorded",        #25."How are injured wildlife are recorded
                                    #during a patrol:" 
  
  "injured_wl_data_recorded",       #26. "Type of data recorded from injured
                                    #wildlife
  
  "injured_wl_data_in_smart",       #27. Are these data entered and stored in 
                                    #SMART Desktop?"                 
  
  "injured_wl_data_other",          #28. If none of the items are recorded in
                                    #the corresponding SMART Conservation Area
                                    #where are they recorded?"  
  
  "sick_wl_recorded",               #29.Are sick wildlife found during patrols
                                    #recorded as a specific category 
                                    #of individuals?
  
  "how_sick_wl_recorded",           #30.How are sick wildlife recorded during a
                                    #patrol"
  
  "sick_wl_data_recorded",          #31. Type of data recorded from sick 
                                    #wildlife 
  
  "sick_wl_data_in_smart",          #32. Are these data entered and stored in 
                                    #SMART Desktop?
  
  "sick_wl_data_other",             #33. If none of the items are recorded 
                                    #in the corresponding SMART Conservation 
                                    # Area where are they recorded?" 
  
  "dom_animals_in_pa",              #34. Domestic animals found in the PA
                                    #(free-ranging, captive, on a farm)?"
  
  "dom_animals_recorded",           #35. Presence of domestic animals recorded" 
  
  
  "dom_animal_in_smart",            #36. Is the presence of domestic animals 
                                    #data entered in SMART Desktop?"  
  
  "dom_animal_health_status_recorded",
                                    #37.Is the health status of the observed
                                    #domestic animals recorded"
  
  "dom_animal_health_status_smart", #38. "Are these data entered in SMART 
                                    #Desktop?" 
  
  "other_wl_health_data",           #39. Other data relevant to wildlife health
                                    #collected"                  
  
  "why_not_wl_health_data",         #40. "If no data are collected on dead, 
                                    #sick or injured wildlife, why"         
  
  "smart_version",                  #41. What version of SMART Desktop is 
                                    #currently used in the protected area?"          
  
  "smart_connect",                  #42. Is SMART Connect available to manage 
                                    #and transfer information between SMART 
                                    #Desktop and SMART Mobile?"                                                         
  
  
  "set_up_connect",                 #43. Are there plans to set up SMART Connect
                                    #instance and when?"
  
  "smart_fully_rolled_out",         #44. Is SMART fully rolled-out or 
                                    #is it being piloted?"  
  
  "add_health_atributes",           #45. Would you be interested in adding a set
                                    #of categories and attributes to your data 
                                    #model in order to facilitate the collection
                                    #of wildlife health data 
                                    #(morbidity/mortality findings and events)?"
  
  "position"                        #46. Please select the option that best 
                                    #describes your position"                     
  )

colnames(dat)<-c(new.names)


# Removing the score column
dat_modified=dat %>% select(-score)

```

<!-- Harmonize the names of protected areas  -->

```{r clean protected area names}
#| echo: false
#| eval: true
#| message: false
#| warning: false

source("clean_pa_names.R")



```

```{r remove unknown example responses}
#| echo: false
#| eval: true
#| message: false
#| warning: false

source("remove_unknown_example.R")
```

Responses could represent a single or multiple protected areas. However, our analysis focused on responses representing one or two individual terrestrial protected areas to gain insights into specific local realities. Therefore, responses representing more than two protected areas were filtered out. The resulting dataset could have a specific protected area represented by single responses, by responses that included two protected areas, or a combination of both. We duplicated the responses that were representing two protected areas but left a single protected area for each one, so each row in the dataset implied a unique protected area. One of the responses representing the same protected area after this step were filtered out to leave a unique representation completion and consistency of answers, and respondent's alignment with the intended target audience of the survey. 


```{r remove reponses representing more than two protected areas }
#| echo: false
#| eval: true
#| message: false
#| warning: false

source("remove_responses_more_two_protected_areas.R")

```


```{r remove other audience}
#| echo: false
#| eval: true
#| message: false
#| warning: false

source("remove_other_audience.R")

```


The protected areas included in the responses were classified as marine or terrestrial based on the World Database on Protected Areas (https://www.protectedplanet.net/en/thematic-areas/wdpa?tab=WDPA). Marine protected areas were removed.

```{r classify protected areas as marine or terrestrial}
#| echo: false
#| eval: true

#source("classify_pa.R")

dat_modified_filtered_expanded<-readRDS("../data/dat_modified_filtered_expanded.RDS")

terrestrial_data<-readRDS("../data/terrestrial_data.RDS")

number_pas_per_response<-
terrestrial_data %>% 
  dplyr::count(survey, name = "number_pas") %>% 
  dplyr::count(number_pas, name = "responses")

```


The questionnaire, survey data, data cleaning and filtering, and descriptive analysis scripts can be found at https://github.com/dmontecino/SMART_survey.

# Results

## General results

The total number of responses was `r nrow(dat_modified_filtered)`. 

`r as.character(english::as.english(length(given_names))) |> stringr::str_to_title()` responses were removed because they included a given name instead of the protected area name and `r as.character(english::as.english(length(unknown_protected_areas)))` response was removed because it did not have a protected area name. `r as.character(english::as.english(nrow(dat_modified_filtered_1) - nrow(dat_modified_filtered_2))) |> stringr::str_to_sentence()` responses representing more than two protected areas were filtered out and other `r as.character(english::as.english(nrow(dat_modified_filtered_2) - nrow(dat_modified_filtered_3)))` were removed because they represented protected areas that were represented once already. `r as.character(english::as.english(nrow(dat_modified_filtered_3) - nrow(dat_modified_filtered_4))) |> stringr::str_to_sentence()` responses were removed because the respondent did not match the target audience. 


The final dataset described below excluded `r as.character(english::as.english(nrow(dat_modified_filtered_expanded |> filter(terrestrial=="no"))))` marine protected areas leading to the removal of another `r as.character(english::as.english(length(unique(dat_modified_filtered_4$survey)) - length(unique(terrestrial_data$survey))))` responses, for a total of `r nrow(terrestrial_data)` protected areas represented by `r length(unique(terrestrial_data$survey))` answered surveys (`r number_pas_per_response |> filter(number_pas==1) |> pull(responses)` responses representing a single protected area and `r number_pas_per_response |> filter(number_pas==2) |> pull(responses)` representing two protected areas) from `r length(unique(terrestrial_data$country))` countries.


## Section 1: Perceptions regarding wildlife health and potential consequences of pathogen transmission among wildlife, domestic animals and people

<!-- Under section 1, we asked managers to rank their perceptions regarding wildlife health  -->
<!-- and potential consequences of pathogen transmission among wildlife, domestic -->
<!-- animals and people. -->

<!-- Wildlife health, including infectious and non-infectious diseases, is important to achieve the conservation goals of the protected areas where I work -->

<!-- Pathogens carried by wildlife inhabiting the protected area I work in can affect livestock health    -->

<!-- Pathogens carried by wildlife inhabiting the protected area I work in can affect public health -->

<!-- Human or livestock pathogens can affect wildlife populations inhabiting the protected area I work  -->


```{r section 1}
#| echo: false
#| message: false
#| warning: false
#| eval: true
#| fig-align: center
#| fig-cap:
#|   Distribution protected area managers responses regarding the importance
#|   of wildlife health to achieve the conservation goals of protected area(s) where
#|   they work in (row 1), human or livestock pathogens can affect wildlife populations
#|  inhabiting the protected area(s) where they work in
#|   (row 2), pathogens carried by wildlife inhabiting the protected area(s) where
#|   they work in can affect public health (row 3), and pathogens carried by wildlife 
#|   inhabiting the protected area(s) where they work in can affect livestock health.

#source("plot_section_1.R")

# plot_section_1
knitr::include_graphics("../plots/plot_section_1.png")

```

## Section 2: Overall frequency of encounters with dead, sick, or injured wildlife in the protected areas and their documentation when found during patrols.

<!-- Are dead animals encountered in the protected area?  -->
<!-- Are sick or injured animals encountered in the protected area?  -->

<!-- Are healthy wildlife found during patrols (rangers or others) recorded as a specific category of individuals? -->
  <!-- 12.a Please select one of the choices below to help us understand how healthy wildlife are recorded during a patrol: -->
  <!-- 12.b Please indicate what type of data are recorded (check all that apply) -->

<!-- 13. Are dead wildlife found during patrols recorded as a specific category of individuals?  -->
  <!-- 13.a Please select one of the choices below to help us understand how dead wildlife are recorded during a patrol: -->
  <!-- 13.b Please indicate what type of data are recorded (check all that apply) -->

<!-- 14. Are injured wildlife found during patrols recorded as a specific category of individuals?  -->
  <!-- 14.a Please select one of the choices below to help us understand how injured wildlife are recorded during a patrol: -->
  <!-- 14.b Please indicate what type of data are recorded (check all that apply) -->

<!-- 15. Are sick wildlife found during patrols recorded as a specific category of individuals?  -->
<!-- 15.a Please select one of the choices below to help us understand how sick wildlife are recorded during a patrol: -->

```{r section 2A}
#| echo: false
#| message: false
#| warning: false
#| eval: true
#| fig-align: center
#| fig-cap:
#|   Distribution of protected area managers responses regarding the recording 
#|   of dead wildlife found during ranger patrols across the overall encountering
#|   frequency with dead wildlife in the protected area(s) where they work in.

#source("plot_section_2.R")

# plot_section_2
knitr::include_graphics("../plots/plot_section_2A.png")

```


```{r section 2B}
#| echo: false
#| message: false
#| warning: false
#| eval: true
#| fig-align: center
#| fig-cap:
#|   Distribution of protected area managers responses regarding the recording 
#|   of sick wildlife found during ranger patrols across the overall encountering
#|   frequency with sick or injured wildlife in the protected area(s) where they work in.

#source("plot_section_2.R")

# plot_section_2
knitr::include_graphics("../plots/plot_section_2B.png")

```

```{r section 2C}
#| echo: false
#| message: false
#| warning: false
#| eval: true
#| fig-align: center
#| fig-cap:
#|   Distribution of protected area managers responses regarding the recording 
#|   of injured wildlife found during ranger patrols across the overall encountering
#|   frequency with sick or injured wildlife in the protected area(s) where they work in.

#source("plot_section_2.R")

# plot_section_2
knitr::include_graphics("../plots/plot_section_2C.png")

```










<!-- <!-- ## Introduced domestic animals are a concern for the conservation goals of the protected areas --> -->

<!-- <!-- ```{r introduced domestic animals} --> -->
<!-- <!-- #| eval: false --> -->
<!-- <!-- #| echo: false --> -->

<!-- <!-- #table(terrestrial_data$dom_animals_concern, useNA = "always") #No NAs --> -->

<!-- <!-- #converting to factor --> -->
<!-- <!-- terrestrial_data$dom_animals_concern<- --> -->
<!-- <!--   factor(terrestrial_data$dom_animals_concern,  --> -->
<!-- <!--        levels = c("Strongly agree", "Agree", "Neutral", "Somewhat Disagree",  --> 
<!-- <!--                   "Disagree", "Strongly disagree")) --> -->

<!-- <!-- ### Introduced domestic animals versus livestock human pathogens in wildlife -->
<!-- <!-- terrestrial_data %>%  --> 
<!-- <!-- distinct(survey, hum_liv_path_affect_wildlife, dom_animals_concern, country) %>%  --> 
<!-- <!-- count(hum_liv_path_affect_wildlife, dom_animals_concern) %>%  --> -->
<!-- <!-- pivot_wider(names_from = dom_animals_concern, values_from = n, values_fill = 0) --> 

<!-- <!-- ``` -->




<!-- <!-- ## Livestock are encountered in the protected area --> -->

<!-- <!-- ```{r livestock encountered} --> -->
<!-- <!-- #| echo: false --> -->
<!-- <!-- #| message: false --> -->
<!-- <!-- #| eval: false --> -->

<!-- <!-- #table(terrestrial_data$livestock_found, useNA = "always") #No NAs --> -->

<!-- <!-- #converting to factor --> -->
<!-- <!-- terrestrial_data$livestock_found<- --> -->
<!-- <!--   factor(terrestrial_data$livestock_found,  --> -->
<!-- <!--        levels = c("Never",  --> -->
<!-- <!--                    "Very rarely",  --> -->
<!-- <!--                    "Rarely",  --> -->
<!-- <!--                    "Sometimes", --> -->
<!-- <!--                    "Occasionally", --> -->
<!-- <!--                    "Very frequently", --> -->
<!-- <!--                    "Always")) --> -->


<!-- <!-- terrestrial_data %>%  --> -->
<!-- <!--   distinct(survey, livestock_found) %>%  --> -->
<!-- <!--   count(livestock_found) %>%  --> -->
<!-- <!--   mutate(Percentage = n / sum(n) * 100) --> -->


<!-- <!-- # crossing livestock encountering with livestock pathogens are a problem for wildlife  --> -->

<!-- <!-- terrestrial_data %>%  --> -->
<!-- <!--   distinct(survey, livestock_found, hum_liv_path_affect_wildlife) %>%  --> -->
<!-- <!--   count(livestock_found, hum_liv_path_affect_wildlife) %>%  --> -->
<!-- <!--   pivot_wider(names_from = hum_liv_path_affect_wildlife, values_from = n, values_fill = 0) %>%  --> -->
<!-- <!--   select(livestock_found, `Strongly agree`, Agree, Neutral, `Somewhat Disagree`, Disagree, `Strongly disagree`) --> -->


<!-- <!-- # crossing livestock encountering with livestock is a problem for the conservation goals --> -->

<!-- <!-- terrestrial_data %>%  --> -->
<!-- <!--   distinct(survey, livestock_found, dom_animals_concern) %>%  --> -->
<!-- <!--   count(livestock_found, dom_animals_concern) %>%  --> -->
<!-- <!--   pivot_wider(names_from = dom_animals_concern, values_from = n, values_fill = 0) %>%  --> -->
<!-- <!--   select(livestock_found, `Strongly agree`, Agree, Neutral, `Somewhat Disagree`, Disagree, `Strongly disagree`) --> -->


<!-- <!-- ``` --> -->






<!-- ## What information regarding healthy wildlife is collected per "how" recorded group? -->

<!-- ```{r wildlife information} -->

<!-- ## Healthy -->
<!-- healthy_data<- -->

<!-- left_join(  #join  -->

<!-- #number of items across responses per group   -->
<!-- terrestrial_data %>%  -->
<!--   distinct(survey,  -->
<!--            healthy_wl_recorded,  -->
<!--            healthy_wl_data_recorded, -->
<!--            how_healthy_wl_recorded) %>%  -->
<!--   filter(healthy_wl_recorded=="Yes") %>%  -->
<!--   mutate(healthy_wl_data_recorded=strsplit(healthy_wl_data_recorded, ", ")) %>%  -->
<!--   unnest(healthy_wl_data_recorded) %>%  -->
<!--   # group_by(how_healthy_wl_recorded, healthy_wl_data_recorded, .drop = FALSE) %>%  -->
<!--   count(how_healthy_wl_recorded, healthy_wl_data_recorded) %>%  -->
<!--   complete(how_healthy_wl_recorded, -->
<!--            healthy_wl_data_recorded, fill = list(n = 0)), -->

<!-- #total responses per group -->
<!--   terrestrial_data %>%  -->
<!--   distinct(survey,  -->
<!--            healthy_wl_recorded,  -->
<!--            how_healthy_wl_recorded) %>%  -->
<!--   filter(healthy_wl_recorded=="Yes") %>%  -->
<!--   count(how_healthy_wl_recorded) %>%  -->
<!--   rename("total"="n")) %>%  -->

<!--   #get the proportion -->
<!--   mutate(prop=n/total) %>%  -->
<!--   mutate(category="healthy") -->



<!-- healthy_data<- -->

<!-- healthy_data %>%  -->
<!--    mutate(how= -->
<!--            case_when( -->
<!--     grepl("Each individual healthy animal", how_healthy_wl_recorded) ~  -->
<!--       "Each animal is\nan individual\nobservation", -->
<!--     grepl("Healthy wildlife are counted", how_healthy_wl_recorded) ~  -->
<!--       "Part of the\nfull count\nof the\ncorresponding\nspecies", -->
<!--     grepl("present/absent", how_healthy_wl_recorded) ~ "Present/absent", -->
<!--     grepl("another way", how_healthy_wl_recorded) ~ "Recorded in\nanother way")) %>%  -->
<!--   select(-how_healthy_wl_recorded) -->


<!-- ## Sick -->

<!-- sick_data<- -->
<!-- left_join(  #join  -->

<!-- #number of items across responses per group   -->
<!-- terrestrial_data %>%  -->
<!--   distinct(survey,  -->
<!--            sick_wl_recorded,  -->
<!--            sick_wl_data_recorded, -->
<!--            how_sick_wl_recorded) %>%  -->
<!--   filter(sick_wl_recorded=="Yes") %>%  -->
<!--   mutate(sick_wl_data_recorded=strsplit(sick_wl_data_recorded, ", ")) %>%  -->
<!--   unnest(sick_wl_data_recorded) %>%  -->
<!--   count(how_sick_wl_recorded, sick_wl_data_recorded) %>%  -->
<!--   complete(how_sick_wl_recorded, -->
<!--            sick_wl_data_recorded, fill = list(n = 0)), -->

<!-- #total responses per group -->
<!--   terrestrial_data %>%  -->
<!--   distinct(survey,  -->
<!--            sick_wl_recorded,  -->
<!--            how_sick_wl_recorded) %>%  -->
<!--   filter(sick_wl_recorded=="Yes") %>%  -->
<!--   count(how_sick_wl_recorded) %>%  -->
<!--   rename("total"="n")) %>%  -->

<!--   #get the proportion -->
<!--   mutate(prop=n/total) %>%  -->
<!--   mutate(category="sick") -->



<!-- sick_data<- -->

<!-- sick_data %>%  -->
<!--    mutate(how= -->
<!--            case_when( -->
<!--     grepl("Each individual sick animal", how_sick_wl_recorded) ~  -->
<!--       "Each animal is\nan individual\nobservation", -->
<!--     grepl("Sick wildlife are counted", how_sick_wl_recorded) ~  -->
<!--       "Part of the\nfull count\nof the\ncorresponding\nspecies", -->
<!--     grepl("present/absent", how_sick_wl_recorded) ~ "Present/absent", -->
<!--     grepl("another way", how_sick_wl_recorded) ~ "Recorded in\nanother way")) %>%  -->
<!--   select(-how_sick_wl_recorded) -->



<!-- ## Injured -->

<!-- injured_data<- -->
<!-- left_join(  #join  -->

<!-- #number of items across responses per group   -->
<!-- terrestrial_data %>%  -->
<!--   distinct(survey,  -->
<!--            injured_wl_recorded,  -->
<!--            injured_wl_data_recorded, -->
<!--            how_injured_wl_recorded) %>%  -->
<!--   filter(injured_wl_recorded=="Yes") %>%  -->
<!--   mutate(injured_wl_data_recorded=strsplit(injured_wl_data_recorded, ", ")) %>%  -->
<!--   unnest(injured_wl_data_recorded) %>%  -->
<!--   count(how_injured_wl_recorded, injured_wl_data_recorded, .drop = FALSE) %>%  -->
<!--     complete(how_injured_wl_recorded, -->
<!--            injured_wl_data_recorded, fill = list(n = 0)), -->

<!-- #total responses per group -->
<!--   terrestrial_data %>%  -->
<!--   distinct(survey,  -->
<!--            injured_wl_recorded,  -->
<!--            how_injured_wl_recorded) %>%  -->
<!--   filter(injured_wl_recorded=="Yes") %>%  -->
<!--   count(how_injured_wl_recorded) %>%  -->
<!--   rename("total"="n")) %>%  -->

<!--   #get the proportion -->
<!--   mutate(prop=n/total) %>%  -->
<!--   mutate(category="injured") -->



<!-- injured_data<- -->

<!-- injured_data %>%  -->
<!--    mutate(how= -->
<!--            case_when( -->
<!--     grepl("Each individual injured animal", how_injured_wl_recorded) ~  -->
<!--       "Each animal is\nan individual\nobservation", -->
<!--     grepl("Injured wildlife are counted", how_injured_wl_recorded) ~  -->
<!--       "Part of the\nfull count\nof the\ncorresponding\nspecies", -->
<!--     grepl("present/absent", how_injured_wl_recorded) ~ "Present/absent", -->
<!--     grepl("another way", how_injured_wl_recorded) ~ "Recorded in\nanother way")) %>%  -->
<!--   select(-how_injured_wl_recorded) -->




<!-- ## Dead -->

<!-- dead_data<-   -->
<!-- left_join(  #join  -->

<!-- #number of items across responses per group   -->
<!-- terrestrial_data %>%  -->
<!--   distinct(survey,  -->
<!--            dead_wl_recorded,  -->
<!--            dead_wl_data_recorded, -->
<!--            how_dead_wl_recorded) %>%  -->
<!--   filter(dead_wl_recorded=="Yes") %>%  -->
<!--   mutate(dead_wl_data_recorded=strsplit(dead_wl_data_recorded, ", ")) %>%  -->
<!--   unnest(dead_wl_data_recorded) %>%  -->
<!--   count(how_dead_wl_recorded, dead_wl_data_recorded) %>%  -->
<!--   complete(how_dead_wl_recorded, -->
<!--            dead_wl_data_recorded, fill = list(n = 0)), -->

<!-- #total responses per group -->
<!--   terrestrial_data %>%  -->
<!--   distinct(survey,  -->
<!--            dead_wl_recorded,  -->
<!--            how_dead_wl_recorded) %>%  -->
<!--   filter(dead_wl_recorded=="Yes") %>%  -->
<!--   count(how_dead_wl_recorded) %>%  -->
<!--   rename("total"="n")) %>%  -->

<!--   #get the proportion -->
<!--   mutate(prop=n/total)%>%  -->
<!--   mutate(category="dead") -->



<!-- dead_data<- -->

<!-- dead_data %>%  -->
<!--    mutate(how= -->
<!--            case_when( -->
<!--     grepl("Each individual dead animal", how_dead_wl_recorded) ~  -->
<!--       "Each animal is\nan individual\nobservation", -->
<!--     grepl("Dead wildlife are counted", how_dead_wl_recorded) ~  -->
<!--       "Part of the\nfull count\nof the\ncorresponding\nspecies", -->
<!--     grepl("present/absent", how_dead_wl_recorded) ~ "Present/absent", -->
<!--     grepl("another way", how_dead_wl_recorded) ~ "Recorded in\nanother way")) %>%  -->
<!--   select(-how_dead_wl_recorded) -->


<!-- # combine the datasets -->

<!-- colnames(healthy_data)<-c("data_recorded",  "n",  "total", "prop", "category", "how") -->


<!-- dat.temp<-rbind(healthy_data, setNames(sick_data, names(healthy_data)))    -->
<!-- dat.temp<-rbind(dat.temp, setNames(injured_data, names(dat.temp)))    -->
<!-- dat.temp<-rbind(dat.temp, setNames(dead_data, names(dat.temp)))    -->

<!-- dat.temp<-dat.temp %>% arrange(data_recorded, category, how) -->

<!-- dat.temp$data_recorded[dat.temp$data_recorded%in%c("Suspect cause of death",  -->
<!--                                                    "Suspect cause of disease", -->
<!--                                                    "Suspect cause of injury")]<-"Suspect cause" -->


<!-- dat.temp$data_recorded[dat.temp$data_recorded%in%c("Body condition",  -->
<!--                                                    "Carcass condition")]<-"Condition" -->


<!-- dat.temp$data_recorded[dat.temp$data_recorded%in%c("Anomalies in carcass (if any)",  -->
<!--                                                    "Anomalies/signs if any")]<-"Anomalies" -->


<!-- dat.temp$category<-factor(dat.temp$category, levels = c("healthy", "sick", "injured", "dead")) -->


<!-- data_plot<-split(dat.temp, list(dat.temp$category, dat.temp$data_recorded)) -->






<!-- # crating the plots by filling a list with the ggplot objects -->
<!-- #types<-c("healthy", "sick", "injured", "dead") -->
<!-- new_theme <-  -->
<!--   theme_gray() + -->
<!--   theme(text = element_text(size = 8), -->
<!--         # panel.border = element_rect(color = "black", linewidth = 1, fill = NA), -->
<!--         # plot.subtitle = element_text(face = "italic"), -->
<!--         # legend.title = element_blank(), -->
<!--         # legend.key.size = unit(.7, "line"), -->
<!--         # legend.background = element_rect(fill = "grey90"), -->
<!--         plot.background = element_rect(linewidth = 1, color = "black"), -->
<!--         panel.grid = element_blank(), -->
<!--         #axis.text.x = element_blank(), -->
<!--         axis.ticks = element_blank(), -->
<!--         axis.title = element_blank(), -->
<!--         panel.background = element_blank(), -->
<!--         strip.background  = element_blank()) -->


<!-- #fixing implausible datasets  -->

<!-- data_plot$healthy.Anomalies<-tribble( -->
<!--     ~data_recorded, ~n, ~total, ~prop, ~category, ~how, -->
<!--     "Anomalies", 0, 0, 0, "healthy", "Each animal is\nan individual\nobservation", -->
<!--     "Anomalies", 0, 0, 0, "healthy", "Part of the\nfull count\nof the\ncorresponding\nspecies", -->
<!--     "Anomalies", 0, 0, 0, "healthy", "Present/absent", -->
<!--     "Anomalies", 0, 0, 0, "healthy", "Recorded in\nanother way" -->
<!--   )                   -->


<!-- data_plot$`healthy.Suspect cause`<-tribble( -->
<!--   ~data_recorded, ~n, ~total, ~prop, ~category, ~how, -->
<!--   "Suspect cause", 0, 0, 0, "healthy", "Each animal is\nan individual\nobservation", -->
<!--   "Suspect cause", 0, 0, 0, "healthy", "Part of the\nfull count\nof the\ncorresponding\nspecies", -->
<!--   "Suspect cause", 0, 0, 0, "healthy", "Present/absent", -->
<!--   "Suspect causes", 0, 0, 0, "healthy", "Recorded in\nanother way" -->
<!-- )       -->


<!-- # Plot  -->

<!-- plot_list<-map(seq_along(data_plot), \(x) -->
<!-- #test<-x -->
<!-- ggplot(data_plot[[x]], aes(x = how, y=prop, fill = how)) + -->
<!-- #ggplot(data_plot[[1]], aes(x = how, y=prop, fill = data_recorded)) + -->
<!--   geom_bar(position = "dodge", stat = "identity") + -->
<!--   geom_text(aes(label=n), vjust=-0.5, size=4) + -->

<!-- new_theme + -->
<!--   theme(legend.position = "none", -->
<!--         plot.title = element_text(size = 13,  -->
<!--                                   face = "bold", -->
<!--                                   margin = margin(0, 0, 0, 0),  -->
<!--                                   vjust = 5), -->
<!--         axis.text.x = element_text(size=8), -->
<!--         axis.text.y = element_text(size=10), -->
<!--         axis.title.y.left = element_text(size = 15,  -->
<!--                                          face = "bold",  -->
<!--                                          margin = margin(r = 10))) + -->

<!--   ylim(0, 1) + -->

<!--   labs(y = if(x %in% seq(1, length(data_plot), by = 4)){ -->
<!--     toupper(unique(data_plot[[x]]$data_recorded))}) + -->

<!--   scale_fill_viridis_d() + -->

<!--   #push the plots wo title on the leeft to the right -->
<!--   theme(plot.margin =  -->
<!--           if(!(x %in% seq(1, length(data_plot), by = 4))){ -->
<!--           unit(c(1.1,0.2,0.8,1.2), "cm")}else{unit(c(1.1,0.2,0.8,0.2), "cm")}) + -->


<!--   # title for the top plots only by disease cat -->
<!--   if(x %in% seq(length(unique(dat.temp$category)))){ -->
<!--   ggtitle(toupper(unique(data_plot[[x]]$category)))} -->

<!-- ) -->


<!-- # library(cowplot) -->

<!-- supp_fig_2A<-plot_grid(plotlist = plot_list[1:16], nrow = 4, ncol=4) -->


<!-- ggplot2::ggsave(supp_fig_2A, -->
<!--                 filename = "figures/supp_file2A.png", -->
<!--                 device = "png",  -->
<!--                 width = 42,  -->
<!--                 height = 50,  -->
<!--                 units = "cm",  -->
<!--                 dpi = 400, -->
<!--                 limitsize = FALSE) -->



<!-- supp_fig_2B<-plot_grid(plotlist = plot_list[17:32], nrow = 4, ncol=4) -->

<!-- ggplot2::ggsave(supp_fig_2B, -->
<!--                 filename = "figures/supp_file2B.png", -->
<!--                 device = "png",  -->
<!--                 width = 42,  -->
<!--                 height = 50,  -->
<!--                 units = "cm",  -->
<!--                 dpi = 400, -->
<!--                 limitsize = FALSE) -->


<!-- ``` -->



<!-- #SECTION 3 -->

<!-- ## Is this information stored in SMART (for the subset that records injured, sick, or dead wildlife) -->

<!-- ```{r information stored in SMART} -->
<!-- #| echo: false -->
<!-- #| eval: true -->

<!-- dead.data=terrestrial_data %>%  -->
<!--   distinct(survey, dead_wl_data_in_smart, dead_wl_data_other, dead_wl_recorded) %>%  -->
<!--   filter(dead_wl_recorded=="Yes") %>%  -->
<!--   select(survey,dead_wl_data_in_smart, dead_wl_data_other) -->

<!-- injured.data=terrestrial_data %>%  -->
<!--   distinct(survey, injured_wl_data_in_smart, injured_wl_data_other, injured_wl_recorded) %>%  -->
<!--   filter(injured_wl_recorded=="Yes") %>% -->
<!--   select(survey,injured_wl_data_in_smart, injured_wl_data_other)  -->

<!-- sick.data=terrestrial_data %>%  -->
<!--   distinct(survey, sick_wl_data_in_smart, sick_wl_data_other, sick_wl_recorded) %>%  -->
<!--   filter(sick_wl_recorded=="Yes") %>%  -->
<!--   select(survey,sick_wl_data_in_smart, sick_wl_data_other)  -->

<!-- #editing a response based one  -->
<!-- # terrestrial_data %>%  -->
<!-- #   filter(grepl("Recorded in smart as a follow", injured_wl_data_other)) %>%  -->
<!-- #   select(survey)  -->
<!-- #> the output is "Recorded in smart as a follow up with the vet doctor who  -->
<!-- #> records on a spread sheet in excel" so I am changing from   -->
<!-- #> "None of these items are recorded in the corresponding SMART Conservation Area" to -->
<!-- #> "Some of these items are entered and stored in the corresponding SMART Conservation Area" -->

<!-- injured.data[injured.data$survey==10,]$injured_wl_data_in_smart<- -->
<!-- "Some of these items are entered and stored in the corresponding SMART Conservation Area" -->




<!-- dead.data2<-dead.data %>%  -->
<!--   dplyr::rename("in_smart"="dead_wl_data_in_smart") %>%  -->
<!--   dplyr::count(in_smart) %>%  -->
<!--   mutate(perc=n/sum(n)*100) %>%  -->
<!--   mutate(type="dead") -->

<!-- injured.data2=injured.data %>%  -->
<!--   dplyr::rename("in_smart"="injured_wl_data_in_smart") %>%  -->
<!--   dplyr::count(in_smart) %>%  -->
<!--   mutate(perc=n/sum(n)*100) %>%  -->
<!--   mutate(type="injured") -->

<!-- sick.data2=sick.data %>%  -->
<!--   dplyr::rename("in_smart"="sick_wl_data_in_smart") %>%  -->
<!--   dplyr::count(in_smart) %>%  -->
<!--   mutate(perc=n/sum(n)*100) %>%  -->
<!--   mutate(type="sick") -->


<!-- in_smart_data<-bind_rows(dead.data2, injured.data2, sick.data2) -->

<!-- in_smart_data %>%  -->
<!--   dplyr::select(-n) %>%  -->
<!--   pivot_wider(names_from = type, values_from = perc) %>% -->
<!--    kableExtra::kbl(caption = "What is stored in SMART") %>% -->
<!--       kableExtra::kable_paper(full_width = F) #%>% -->

<!-- ``` -->

<!-- ## If none of this information is stored in SMART where is it stored? -->

<!-- ```{r where information stored if not in SMART} -->

<!-- dead.data %>%  -->
<!--   filter(grepl("None", dead_wl_data_in_smart)) %>%  -->
<!--   distinct(dead_wl_data_other) -->

<!-- sick.data %>%  -->
<!--   filter(grepl("None", sick_wl_data_in_smart)) %>%  -->
<!--   distinct(sick_wl_data_other) -->

<!-- injured.data %>%  -->
<!--   filter(grepl("None", injured_wl_data_in_smart)) %>%  -->
<!--   distinct(injured_wl_data_other) -->


<!-- ``` -->


<!-- ## SMART version used at the time of survey response -->

<!-- ```{r smart version} -->

<!-- smart_version_data<-  -->

<!-- terrestrial_data %>%  -->
<!--    distinct(survey, smart_version) -->

<!-- data.frame(smart_version_data) -->


<!-- terrestrial_data %>% filter(smart_version %in% c("none", -->
<!--                               "unsure",  -->
<!--                               "SMART mobile 7", -->
<!--                               "IDK", -->
<!--                               "Yes")) %>% distinct(survey, smart_version)  -->


<!-- temp<-terrestrial_data %>% filter(survey%in%c(1,26,48,108,124)) -->

<!-- write.csv(temp, "/Users/DMontecino/Downloads/check.csv") -->



<!-- #> mobile can be replaced becasue there is not SMARt Mobile 7. SMART Mobile versions  -->
<!-- #> have 3 numbers as 350, 465, etc. and they dont reach to 7 hundred. -->

<!-- smart_version_data$smart_version<-gsub("SMART|Version",  -->
<!--                                      replacement = "",  -->
<!--                                      ignore.case = T,  -->
<!--                                      x = smart_version_data$smart_version) -->

<!-- smart_version_data$smart_version<-trimws(smart_version_data$smart_version, which = "left") -->

<!-- unique(smart_version_data$smart_version) -->

<!-- #> mexico has a national data model and Ana cervantes from CONANP told me this  -->
<!-- #> s the correct version they are using -->
<!-- smart_version_data[grepl("4.1", smart_version_data$smart_version),]$smart_version<-"4.1.0" -->

<!-- #terrestrial_data %>% filter(smart_version=="Yes") %>% data.frame() -->
<!-- smart_version_data$smart_version[smart_version_data$smart_version=="Yes"]<-"Invalid" -->

<!-- unique(smart_version_data$smart_version) -->

<!-- terrestrial_data %>% filter(smart_version %in% c("none", -->
<!--                               "unsure",  -->
<!--                               "Invalid",  -->
<!--                               "IDK",  -->
<!--                               ".6.2.3.RC19.win32", -->
<!--                               "mobile 7")) %>% distinct(survey) %>% select(survey) -->



<!-- ``` -->

<!-- ## SMART fully rolled-out -->

<!-- ```{r smart fully rolled out} -->

<!-- smart_rolled_out_data<-  -->

<!-- terrestrial_data %>%  -->
<!--   distinct(survey, smart_fully_rolled_out) %>%  -->
<!--   dplyr::count(smart_fully_rolled_out) -->

<!-- ``` -->



<!-- ## SMART Connect available -->

<!-- ```{r smart connect available} -->

<!-- smart_connect<- -->

<!--   terrestrial_data %>%  -->
<!--   distinct(survey, dead_wl_data_in_smart,  -->
<!--            sick_wl_data_in_smart, injured_wl_data_in_smart,  -->
<!--            smart_connect) %>%  -->
<!--   filter(grepl("Some|All", dead_wl_data_in_smart) |  -->
<!--                  grepl("Some|All", sick_wl_data_in_smart) | -->
<!--                  grepl("Some|All", injured_wl_data_in_smart)) %>%  -->
<!--   distinct(survey, smart_connect) %>%  -->
<!--   dplyr::count(smart_connect) -->


<!-- ``` -->

<!-- ## Interest to add attributes and categories -->

<!-- ```{r interest to add health attributes and categories } -->

<!-- terrestrial_data %>%  -->
<!--   distinct(survey,add_health_atributes) %>%  -->
<!--   dplyr::count(add_health_atributes) -->

<!-- terrestrial_data %>%  -->
<!--   distinct(survey, wildlife_health_important, add_health_atributes) %>%  -->
<!--   dplyr::count(add_health_atributes, wildlife_health_important) %>%  -->
<!--   pivot_wider(values_from = n, names_from = wildlife_health_important) -->

<!-- ``` -->


<!-- We received 128 responses, which underwent filtering based on several criteria (e.g., unidentifiable protected area and non-adherence to methodological rules). For the subsequent descriptive analysis, we focused on a subset of 84 responses, representing 93 unique terrestrial protected areas distributed across 21 countries (Africa = 8, Asia = 6, Europe = 1, North America = 1, Central America = 2, South America = 3). Seventy-seven responses represented a single protected area, while nine responses represented two of them. -->
<!-- Most answers regarding encountering sick or injured and dead wildlife concentrated between "Very rarely" and "Occasionally" and "Very rarely" and "Very frequently", respectively, without remarkable differences between groups (Fig 4). -->

<!-- Figure 4. Distribution of responses by protected area managers regarding the overall encountering frequency with sick or injured and dead wildlife in the protected area(s) they represented. -->

<!-- Figure 5. Distribution of responses by protected area managers regarding the documentation of sick (A), injured (B), and dead wildlife (C) found during patrols across the overall encountering frequency with sick or injured and dead wildlife in the protected area(s) they represented. -->
<!-- Sick and injured wildlife encountered during patrols is often undocumented (30.9% and 42.9 % responded “Yes”, respectively), while healthy and dead wildlife is usually registered (69.1% and 70.24% of “Yes” responses, respectively). These trends were consistent across encounter frequency categories of sick or injured and dead wildlife except when sick and injured wildlife are found “Very frequently” (Fig 5). Twenty responses claimed that neither sick, injured, or dead animals found during patrols are registered. -->
<!-- Documented healthy, sick, injured, and dead wildlife found during patrols were primarily reported as individual animals. Still, it was also common to record them as part of the total count of the corresponding species stratified by health status (Fig 6).  -->


<!-- Figure 6. Overall frequency of documentation methods of healthy, sick, injured, and dead wildlife found during ranger patrols as reported by protected area(s) managers. -->
<!-- The information collected was also variable. The species was commonly recorded and photographs were usually taken, but the anomalies observed in sick, injured, or dead animals tend not to be registered. Other data gathered included the age; sex; body or carcass condition; and suspect cause of death, disease, or injury (Supplementary File 2). -->


<!-- Supplementary Information 2. The proportion of protected area managers reporting that rangers document specific types of data (rows) from healthy, sick, injured, and dead wildlife (columns) stratified by different methods to register these animals. The numbers over the bars show the total number of responses. -->

<!-- Wildlife health data was not commonly fully kept in a SMART Conservation Area, and only 46.2%, 61.1%, and 62.7% of the responses reported storing “all” data associated with sick, injured, and dead animals (when documented), respectively. Otherwise, Microsoft Excel spreadsheets, reports, minutes, patrol and other paper forms, verbal mentions only, and, in a single case, another database were mentioned as alternatives. Finally, 35, 17, and seven responses answered that SMART was “Fully rolled-out”, “Partially rolled-out”, and “Under Pilot”, respectively, in the protected area(s) represented. The SMART versions used ranged between three and seven. SMART Connect was available for X respondents.  -->
<!-- <!-- ## Why wildlife health is not recorded.  --> -->

<!-- <!-- Everyone responded this question regardless if they actually recorded data in dead, sick, injured wildife --> -->

<!-- <!-- ```{r} --> -->
<!-- <!-- #| echo: false --> -->
<!-- <!-- #| eval: false --> -->

<!-- <!-- terrestrial_data$why_not_wl_health_data --> -->
<!-- <!-- ``` --> -->

<!-- <!-- ## Livestock --> -->

<!-- <!-- ```{r} --> -->
<!-- <!-- #| echo: false --> -->
<!-- <!-- #| eval: false --> -->

<!-- <!-- livestock= --> -->
<!-- <!-- terrestrial_data %>% select(hum_liv_path_affect_wildlife,  --> -->
<!-- <!--                             livestock_found) --> -->

<!-- <!-- #human Livestock pathogens affecting wildlife --> -->
<!-- <!-- livestock$hum_liv_path_affect_wildlife=factor(x = livestock$hum_liv_path_affect_wildlife, --> -->
<!-- <!--                                              levels = c("Strongly agree",  --> -->
<!-- <!--                                                        "Agree",  --> -->
<!-- <!--                                                        "Neutral",  --> -->
<!-- <!--                                                        "Somewhat Disagree", --> -->
<!-- <!--                                                        "Disagree", --> -->
<!-- <!--                                                        "Strongly disagree")) --> -->
<!-- <!-- # --> -->
<!-- <!-- ggplot(livestock) + --> -->
<!-- <!--   geom_bar(aes(hum_liv_path_affect_wildlife)) +  --> -->
<!-- <!--   labs( --> -->
<!-- <!--     title = "Human or livestock pathogens can affect wildlife",  --> -->
<!-- <!--     y = "Count",  --> -->
<!-- <!--     x = "Option") --> -->

<!-- <!-- # Livestock found in Protecte areas during patrols --> -->
<!-- <!-- livestock$livestock_found=factor(x = livestock$livestock_found,  levels = c("Never",  --> -->
<!-- <!--                                                                        "Very rarely",  --> -->
<!-- <!--                                                                        "Rarely",  --> -->
<!-- <!--                                                                        "Sometimes", --> -->
<!-- <!--                                                                        "Occasionally", --> -->
<!-- <!--                                                                        "Very frequently", --> -->
<!-- <!--                                                                        "Always")) --> -->

<!-- <!-- ggplot(livestock) + --> -->
<!-- <!--   geom_bar(aes(livestock_found)) + --> -->
<!-- <!--   labs( --> -->
<!-- <!--     title = "Livestock found during patrols",  --> -->
<!-- <!--     y = "Count",  --> -->
<!-- <!--     x = "Option") --> -->

<!-- <!-- ``` --> -->
<!-- <!-- Consensus that livestock pathogens can affect wildlife and livestock is found in the PAs during patrols in different degree. --> -->

<!-- <!-- ## Domestic Animals present in the conservation area --> -->

<!-- <!-- ```{r} --> -->
<!-- <!-- #| echo: false --> -->
<!-- <!-- #| eval: false --> -->

<!-- <!-- domestic= --> -->
<!-- <!-- terrestrial_data %>% select(dom_animals_concern, --> -->
<!-- <!--                             dom_animals_in_pa, --> -->
<!-- <!--                             dom_animals_recorded, --> -->
<!-- <!--                             dom_animal_in_smart, --> -->
<!-- <!--                             dom_animal_health_status_recorded, --> -->
<!-- <!--                             dom_animal_health_status_smart) --> -->



<!-- <!-- # Domestic animals present in the conservation area --> -->

<!-- <!-- round(prop.table(table(domestic$dom_animals_in_pa, useNA = "always")),2) --> -->
<!-- <!-- ``` --> -->
<!-- <!-- The presence of domestic animals in protected areas is reported in two thirds of the responses --> -->



<!-- <!-- ## Are domestic animals a concern for the conservation goals of the protected areas --> -->

<!-- <!-- ```{r} --> -->
<!-- <!-- #| echo: false --> -->
<!-- <!-- #| eval: false --> -->

<!-- <!-- # are domestic animals a concern for the conservation goals --> -->


<!-- <!-- domestic$dom_animals_concern=factor(x = domestic$dom_animals_concern, --> -->
<!-- <!--                                              levels = c("Strongly agree",  --> -->
<!-- <!--                                                        "Agree",  --> -->
<!-- <!--                                                        "Neutral",  --> -->
<!-- <!--                                                        "Somewhat Disagree", --> -->
<!-- <!--                                                        "Disagree", --> -->
<!-- <!--                                                        "Strongly disagree")) --> -->

<!-- <!-- ggplot(domestic) + --> -->
<!-- <!--   geom_bar(aes(dom_animals_concern)) +  --> -->
<!-- <!--   labs( --> -->
<!-- <!--     title = "Domestic animals are a concern for conservation",  --> -->
<!-- <!--     y = "Count",  --> -->
<!-- <!--     x = "Option") --> -->

<!-- <!-- ``` --> -->
<!-- <!-- Most of the respondents agree that domestic animals are a concern for the conservation goals of the protected areas --> -->

<!-- <!-- ## Are domestic animals found during patrols recorded (for the subset where they are observed) --> -->

<!-- <!-- ```{r} --> -->
<!-- <!-- #| echo: false --> -->
<!-- <!-- #| eval: false --> -->

<!-- <!-- # are domestic animals a concern for the conservation goals --> -->
<!-- <!-- temp=domestic %>% filter(dom_animals_in_pa=="Yes") --> -->

<!-- <!-- round(prop.table(table(temp$dom_animals_recorded, useNA = "always")),2) --> -->

<!-- <!-- ``` --> -->
<!-- <!-- The presence of domestic animals in protected areas is reported in 70% thirds of the responses where these animals are observed --> -->


<!-- <!-- ## Is the health of domestic animals found during patrols recorded? (for the subset where domestic animals are observed in the PA and are recorded) --> -->

<!-- <!-- ```{r} --> -->
<!-- <!-- #| echo: false --> -->
<!-- <!-- #| eval: false --> -->


<!-- <!-- temp=domestic %>% filter(dom_animals_in_pa=="Yes" & dom_animals_recorded=="Yes") --> -->

<!-- <!-- round(prop.table(table(temp$dom_animal_health_status_recorded, useNA = "always")),2) --> -->

<!-- <!-- ``` --> -->
<!-- <!-- Despite there is an understanding that domestic animals are a concern for conservaetion and that pathogens of livestock can impact wildlife, the health of domestic animals is not recorded in those PAs where these animals are observed and recorded. --> -->


<!-- <!-- ## Records of domestic animals found in protected areas during patrols is recorded in SMART (for the subset where domestic animals are recorded) --> -->

<!-- <!-- ```{r} --> -->
<!-- <!-- #| echo: false --> -->
<!-- <!-- #| eval: false --> -->

<!-- <!-- temp=domestic %>% filter(dom_animals_recorded=="Yes") --> -->

<!-- <!-- round(prop.table(table(temp$dom_animal_in_smart, useNA = "always")),2) --> -->



<!-- <!-- ``` --> -->
<!-- <!-- For the subset of respondents answering that domestic animals found during patrols are recorded, 90% said that these data is stored in SMART. --> -->

<!-- <!-- ## Health of domestic animals is recorded in SMART (for the subset where health status of domestic animals is recorded) --> -->

<!-- <!-- ```{r} --> -->
<!-- <!-- #| echo: false --> -->
<!-- <!-- #| eval: false --> -->

<!-- <!-- temp=domestic %>% filter(dom_animal_health_status_recorded=="Yes") --> -->

<!-- <!-- round(prop.table(table(temp$dom_animal_health_status_smart, useNA = "always")),2) --> -->

<!-- <!-- ``` --> -->
<!-- <!-- For the subset of respondents answering that the health status of domestic animals found during patrols is recorded, almost 90% said that these data is stored in SMART. --> -->


<!-- <!-- # Python equivalent --> -->

<!-- <!-- ## Convert the R data loaded above into a python rpy2.robjects.vectors.DataFrame in a python session --> -->
<!-- ```{python} -->
<!-- #| echo: false -->
<!-- #| eval: false -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- # data_from_r_in_python=r.data_from_r -->
<!-- # print(data_from_r_in_python) -->
<!-- # import rpy2.robjects as robjects -->

<!-- import rpy2.robjects as ro -->
<!-- data_from_r_in_python=ro.r['terrestrial_data'] -->
<!-- # print(type(data_from_r_in_python)) -->
<!-- data_from_r_in_python -->
<!-- ``` -->

<!-- <!-- ## Convert the rpy2.robjects.vectors.DataFrame data into pandas.core.frame.DataFrame in a python session --> -->
<!-- ```{python} -->
<!-- #| echo: false -->
<!-- #| eval: false -->

<!-- import pandas as pd -->
<!-- from rpy2.robjects.packages import importr -->
<!-- from rpy2.robjects import pandas2ri -->
<!-- from rpy2.robjects.conversion import localconverter -->

<!-- with localconverter(ro.default_converter + pandas2ri.converter): -->
<!--   data_from_r_in_python_as_pd = ro.conversion.rpy2py(data_from_r_in_python) -->

<!-- data_from_r_in_python_as_pd -->
<!-- # print(type(data_from_r_in_python_as_pd)) -->

<!-- ``` -->

<!-- <!-- ## Convert the pandas.core.frame.DataFrame into an R data.frame in an R session. --> -->
<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| eval: false -->

<!-- library(reticulate) -->
<!-- data_from_r_in_python_as_pd_back_to_r=as_tibble(py$data_from_r_in_python_as_pd) -->

<!-- data_from_r_in_python_as_pd_back_to_r -->
<!-- identical(data_from_r_in_python_as_pd_back_to_r, terrestrial_data) -->


<!-- ``` -->


